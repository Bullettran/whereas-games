import{_ as C}from"./BhzTYbtd.js";import{m as $,p as H,_ as T,o as r,c,a,F as h,n as l,q as b,t as n,s as L,b as m,w as p,u as g,v,d as _}from"./1EpAYDnX.js";import A from"./BYmZ38Mk.js";import E from"./BpTrBEeZ.js";import{u as I}from"./ZtCTLdtK.js";import{s as y}from"./CgXaL8lj.js";import"./Be1fzYNM.js";import"./DpE4Ilas.js";const R=$({name:"Reward",props:{rewards:{type:Array,required:!0},gold:{type:Number,default:0}},data:()=>({generatedRewards:[]}),methods:{generateRewards(){this.generatedRewards=this.rewards.filter(s=>Math.random()*100<s.chance).map(s=>({...s}))},closeReward(){this.$emit("close",this.generatedRewards)}},mounted(){this.generateRewards()}}),B=H("/images/components/global/gold.png"),S={class:"reward"},F={class:"reward__items"},q=["src","alt"],N={class:"reward__count"},V={class:"reward__desc"},X={key:1,class:"reward__nothing"},z={key:0,class:"reward__gold"},Q={class:"reward__value"},j={class:"reward__buttons"};function G(s,t,e,o,d,f){return r(),c("div",S,[t[2]||(t[2]=a("h2",{class:"reward__title"}," Награда за победу ",-1)),a("div",F,[s.generatedRewards.length>0?(r(!0),c(h,{key:0},l(s.generatedRewards,u=>(r(),c("div",{class:"reward__item",key:u.id},[u.icon?(r(),c("img",{key:0,class:"reward__icon",src:`/images/components/rewards/${u.icon}.png`,alt:u.name},null,8,q)):b("",!0),a("span",N,n(u.count),1),a("div",V,n(u.description),1)]))),128)):(r(),c("div",X,"В этот раз ничего не выпало"))]),s.gold>0?(r(),c("div",z,[t[1]||(t[1]=a("div",{class:"reward__picture"},[a("img",{class:"reward__image",src:B,alt:"Изображение золота"})],-1)),a("div",Q,"Золото +"+n(s.gold),1)])):b("",!0),a("div",j,[a("button",{class:"reward__button button button--metal",onClick:t[0]||(t[0]=(...u)=>s.closeReward&&s.closeReward(...u)),"data-bs-dismiss":"modal","aria-label":"Закрыть"},"Забрать")])])}const M=T(R,[["render",G],["__scopeId","data-v-b76e4b69"]]),O=$({name:"FlyDemon",components:{Reward:M},data:()=>({char:I(),log:[],isPlayerTurn:!0,isMobDied:!1,isPlayerDied:!1,isPlayerHidden:!1,isMobHidden:!1,mob:{stats:{attack:4,critical:0,hp:10,mp:6,speed:1,defence:2,currentHp:10,currentMp:6},actions:{x:640,y:520,speed:3,facingLeft:!1,previousX:394,moving:!1,moveInterval:null,state:"idle"},skills:[{id:"auto-attack",name:"Автоатака",description:"Наносит урон врагу",type:"attack",manaCost:0,effect:{damage:0,duration:0,element:""},animType:"attack"},{id:"bleed",name:"блабла",description:"Атакует и вешает дебаф",type:"attack",manaCost:3,effect:{damage:1,damagePerTurn:1,duration:2,description:"Каждый ход получает урон",element:"debuff"},animType:"attack"}],buffs:[],debuffs:[],bonus:{attack:0,critical:0,hp:0,mp:0,speed:0,defence:0},image:"/images/sprites/mobs/red-flying-demon/icon.png"},person:{actions:{x:200,y:410,speed:3,facingLeft:!1,previousX:394,moving:!1,moveInterval:null,state:"idle"},stats:{currentHp:7,currentMp:6},skills:[{id:"auto-attack",name:"Автоатака",description:"Наносит урон врагу",type:"attack",manaCost:0,effect:{damage:0,duration:0,element:""},animType:"attack"},{id:"burning",name:"Огненный шар",description:"Наносит урон врагу",type:"attack",manaCost:1,effect:{damage:2,duration:0,element:""},animType:"attack1"},{id:"blade-of-flame",name:"Меч пламени",description:"Наносит множесветнный урон врагу",type:"attack",manaCost:2,effect:{damage:3,duration:0,element:""},animType:"attack2"},{id:"eternal-flame",name:"блабла",description:"Атакует и вешает дебаф",type:"attack",manaCost:3,effect:{damage:1,damagePerTurn:1,duration:2,description:"Каждый ход получает урон",element:"debuff"},animType:"attack3"},{id:"flame-control",name:"бббб",description:"Восстанавливает жизни 2 хода",type:"buff",manaCost:3,effect:{healPerTurn:1,duration:2,element:"heal",description:"Восстанавливает здоровье"},animType:"buff"},{id:"flame-shield",name:"ббб",description:"Увеличивает атаку на 7 ходов",type:"buff",manaCost:4,effect:{attack:2,duration:7,element:"buff",description:"Увеличена атака"},animType:"buff"}],potions:[{id:"hp-1",name:"Эликсир здоровья",description:"Восполняет 2 здоровья",type:"potion",manaCost:0,used:!1,effect:{heal:2,duration:0,element:"heal"}},{id:"mp-1",name:"Эликсир маны",description:"Восполняет 2 маны",type:"potion",manaCost:0,used:!1,effect:{mp:2,duration:0,element:"mana"}},{id:"def-1",name:"Эликсир маны",description:"Увеличивает защиту на ",type:"potion",manaCost:0,used:!1,effect:{defence:2,duration:0,element:"defence"}}],buffs:[],debuffs:[],bonus:{attack:0,critical:0,hp:0,mp:0,speed:0,defence:0}},targets:{start:{x:200,y:410},battle:{x:460,y:440},person:{x:350,y:500},mob:{x:640,y:520}},rewardGold:10,rewards:[{id:"moonstone",name:"Лунный камень",description:"Камень, светящийся мягким лунным светом.",type:"material",rare:"standard",chance:20,icon:"moonstone",count:2,stats:{},set:{},buffs:{},questItem:{isQuest:!1,type:""}},{id:"demon-essence",name:"Эссенция демона",description:"Таинственная субстанция, добытая из демонических существ.",type:"material",rare:"standard",icon:"demon-essence",chance:100,count:1,stats:{},set:{},buffs:{},questItem:{isQuest:!1,type:""}},{id:"tree",name:"Простая древесина",description:"Простая древесина",type:"material",rare:"standard",icon:"tree",count:1,chance:50,stats:{},set:{},buffs:{},questItem:{isQuest:!1,type:""}}]}),methods:{isPersonAlive(){return this.person.stats.currentHp>0},isMobAlive(){return this.mob.stats.currentHp>0},moveMobTo(s){if(this.mob.actions.moving)return;this.mob.actions.moving=!0,this.mob.actions.state="run";const t={x:this.targets[s].x,y:this.targets[s].y};clearInterval(this.mob.actions.moveInterval),this.mob.actions.moveInterval=y(()=>{const e=t.x-this.mob.actions.x,o=t.y-this.mob.actions.y,d=Math.sqrt(e*e+o*o);if(e>0?this.mob.actions.facingLeft=!0:e<0&&(this.mob.actions.facingLeft=!1),d<this.mob.actions.speed){this.mob.actions.x=t.x,this.mob.actions.y=t.y,this.mob.actions.moving=!1,clearInterval(this.mob.actions.moveInterval),s==="person"?(this.mob.actions.state="attack",this.mobAnimations("attack"),setTimeout(()=>{this.mob.actions.state="idle",this.moveMobTo("mob")},600)):s==="mob"&&(this.mob.actions.state="idle",this.mob.actions.facingLeft=!1);return}this.mob.actions.previousX=this.mob.actions.x,this.mob.actions.x+=e/d*this.mob.actions.speed,this.mob.actions.y+=o/d*this.mob.actions.speed,this.mob.actions.state!=="run"&&(this.mob.actions.state="run")},16)},moveTo(s,t){if(this.person.actions.moving)return;this.person.actions.moving=!0,this.person.actions.state="run";const e={x:this.targets[s].x,y:this.targets[s].y};clearInterval(this.person.actions.moveInterval),this.person.actions.moveInterval=y(()=>{const o=e.x-this.person.actions.x,d=e.y-this.person.actions.y,f=Math.sqrt(o*o+d*d);if(o<0?this.person.actions.facingLeft=!0:o>0&&(this.person.actions.facingLeft=!1),f<this.person.actions.speed){this.person.actions.x=e.x,this.person.actions.y=e.y,this.person.actions.moving=!1,clearInterval(this.person.actions.moveInterval),s==="battle"?this.onFightPerson(s,t):s==="start"&&(this.person.actions.state="idle",this.person.actions.facingLeft=!1);return}this.person.actions.previousX=this.person.actions.x,this.person.actions.x+=o/f*this.person.actions.speed,this.person.actions.y+=d/f*this.person.actions.speed},16)},onFightPerson(s,t){if(!(!this.isPersonAlive()||!this.isMobAlive())){if(t.animType==="buff")this.setBuff(t,"person"),this.playAnimType(t.animType);else{this.playAnimType(t.animType),t.effect.element==="debuff"&&this.setDebuff(t,"mob");const e=t.effect.damage+this.char.character.stats.attack+this.person.bonus.attack;this.applyDamageToMob(this.isCriticalHit("person",e)),this.onReturnStart()}this.endPlayerTurn()}},chooseMobSkill(){const s=this.mob.skills,t=s.filter(o=>this.mob.stats.currentMp>=(o.manaCost||0));if(t.length===0)return s.find(o=>o.id==="auto-attack")||s[0];const e=Math.floor(Math.random()*t.length);return t[e]},enemyTurn(){if(!this.isPersonAlive()||!this.isMobAlive())return;const s=this.chooseMobSkill();s.manaCost&&(this.mob.stats.currentMp-=s.manaCost),setTimeout(()=>{this.moveMobTo("person"),setTimeout(()=>{if(!this.isPersonAlive()||!this.isMobAlive())return;s.effect.element==="debuff"&&this.setDebuff(s,"person");const t=(s.effect.damage||0)+this.mob.stats.attack+(this.mob.bonus.attack||0);this.applyDamageToPerson(t),this.setLogs(`Враг использует "${s.name}" и наносит ${t} урона`),this.processEffects(this.person),this.processEffects(this.mob),this.regenMana(),this.isPlayerTurn=!0},1200)},700)},regenMana(){this.person.stats.currentMp=Math.min(this.person.stats.currentMp+1,this.char.character.stats.mp)},setBuff(s,t){this[t].buffs.push({duration:s.effect.duration,healPerTurn:s.effect.healPerTurn?s.effect.healPerTurn:0,bonus:{attack:s.effect.attack?s.effect.attack:0,critical:s.effect.critical?s.effect.critical:0,hp:s.effect.hp?s.effect.hp:0,mp:s.effect.mp?s.effect.mp:0,speed:s.effect.speed?s.effect.speed:0,defence:s.effect.defence?s.effect.defence:0},image:`/images/skills/${this.char.character.species}/${s.id}.png`,desc:s.effect.description})},setDebuff(s,t){this[t].debuffs.push({duration:s.effect.duration,damagePerTurn:s.effect.damagePerTurn,image:t==="mob"?`/images/skills/${this.char.character.species}/${s.id}.png`:`/images/skills/mob/${s.id}.png`,desc:s.effect.description})},processEffects(s){if(Array.isArray(s.buffs))for(let t=s.buffs.length-1;t>=0;t--){const e=s.buffs[t];e.healPerTurn&&(s.stats.currentHp=Math.min(s.stats.currentHp+e.healPerTurn,this.char.character.stats.hp),this.setLogs(`+${e.healPerTurn} здоровья от бафа (${e.desc})`)),e.bonus&&Object.keys(e.bonus).forEach(o=>{e.bonus[o]&&(s.bonus[o]=(s.bonus[o]||0)+e.bonus[o])}),e.duration--,e.duration<=0&&(e.bonus&&Object.keys(e.bonus).forEach(o=>{e.bonus[o]&&(s.bonus[o]=s.bonus[o]||0)}),s.buffs.splice(t,1),this.setLogs(`Баф (${e.desc}) закончился`))}if(Array.isArray(s.debuffs))for(let t=s.debuffs.length-1;t>=0;t--){const e=s.debuffs[t];e.damagePerTurn>0&&(s===this.person?(this.applyDamageToPerson(e.damagePerTurn),this.setLogs(`-${e.damagePerTurn} здоровья от дебафа (${e.desc})`)):(this.applyDamageToMob(e.damagePerTurn),this.setLogs(`-${e.damagePerTurn} здоровья от дебафа (${e.desc})`))),e.duration--,e.duration<=0&&(s.debuffs.splice(t,1),this.setLogs(`Дебаф "${e.desc}" закончился`))}this.checkMobDeath(),this.checkPlayerDeath()},endPlayerTurn(){setTimeout(()=>{this.processEffects(this.person),this.processEffects(this.mob),this.log.unshift("Ход персонажа закончился"),this.enemyTurn()},2e3)},onReturnStart(){setTimeout(()=>{this.moveTo("start",null)},1e3)},mobAnimations(s){this.mob.actions.state=s},playAnimType(s){const t=this.$refs.character;if(!t)return;const e=t.classList;[`${this.char.character.species}--attack`,`${this.char.character.species}--attack1`,`${this.char.character.species}--attack2`,`${this.char.character.species}--attack3`,`${this.char.character.species}--def`,`${this.char.character.species}--buff`,`${this.char.character.species}--hit`,`${this.char.character.species}--death`].forEach(o=>e.remove(o)),s&&e.add(`${this.char.character.species}--${s}`),setTimeout(()=>{e.remove(`${this.char.character.species}--${s}`)},1e3)},useSkill(s){!this.isPersonAlive()||!this.isMobAlive()||this.isPlayerTurn&&(this.person.stats.currentMp<s.manaCost||(this.person.stats.currentMp-=s.manaCost,this.isPlayerTurn=!1,s.animType!=="buff"?this.moveTo("battle",s):this.onFightPerson("battle",s)))},applyDamageToPerson(s){if(!this.isPersonAlive()||!this.isMobAlive())return;const t=this.char.character.stats.defence+this.person.bonus.defence,e=Math.max(s-t,1);this.person.stats.currentHp=Math.max(this.person.stats.currentHp-e,0),setTimeout(()=>{this.playAnimType("hit")},500),setTimeout(()=>{this.person.stats.currentHp>0?this.person.actions.state="idle":this.playAnimType("death")},1e3),this.setLogs(`Персонаж получил ${e} урона (с учётом защиты ${t})`),this.checkPlayerDeath()},checkPlayerDeath(){this.isPlayerDied||this.person.stats.currentHp<=0&&(this.isPlayerDied=!0,this.person.stats.currentHp=0,this.playAnimType("death"),this.setLogs("Персонаж погиб!"),this.isPlayerTurn=!1,setTimeout(()=>{this.isPlayerHidden=!0},1e3))},applyDamageToMob(s){if(!this.isPersonAlive()||!this.isMobAlive())return;const t=this.mob.stats.defence+(this.mob.bonus.defence||0),e=Math.max(s-t,1);this.mob.stats.currentHp=Math.max(this.mob.stats.currentHp-e,0),setTimeout(()=>{this.mob.actions.state="hit"},400),setTimeout(()=>{this.mob.stats.currentHp>0?this.mob.actions.state="idle":(this.mob.actions.state="death",this.isMobDied=!0)},2e3),this.setLogs(`Моб получил ${e} урона (с учётом защиты ${t})`),this.checkMobDeath()},checkMobDeath(){this.isMobDied||this.mob.stats.currentHp<=0&&(this.isMobDied=!0,this.mob.stats.currentHp=0,this.mob.actions.state="death",this.setLogs("Моб повержен!"),this.isPlayerTurn=!1,setTimeout(()=>{this.isMobHidden=!0,this.openReward()},1500))},onPercentage(s,t){return s/t*100},isCriticalHit(s,t){let e=0;return s==="person"?(e=this.char.character.stats.critical+this.person.bonus.critical,this.setLogs("Успех критического удара")):e=this.mob.stats.critical+this.mob.bonus.critical,Math.random()*100<=e?t*2:t},drinkPotion(s){if(this.setLogs(`Использовано зелье: ${s.name}`),s.effect.heal){const t=this.char.character.stats.hp,e=this.person.stats.currentHp;this.person.stats.currentHp=Math.min(this.person.stats.currentHp+s.effect.heal,t),this.setLogs(`+${this.person.stats.currentHp-e} Здоровья`)}if(s.effect.mp){const t=this.char.character.stats.mp,e=this.person.stats.currentMp;this.person.stats.currentMp=Math.min(this.person.stats.currentMp+s.effect.mp,t),this.setLogs(`+${this.person.stats.currentMp-e} MP`)}s.effect.defence&&(this.person.bonus.defence=(this.person.bonus.defence||0)+s.effect.defence,this.setLogs(`Защита увеличена на ${s.effect.defence}`)),s.used=!0},setLogs(s){this.log.unshift(s)},openReward(){new this.$bootstrap.Modal(document.getElementById("reward"),{backdrop:"static",keyboard:!1}).show()},onRewardClose(s){console.log(s),L("/town")}},mounted(){}}),U={class:"fight"},J={class:"fight__container container"},K={class:"fight__stats stats"},W={class:"stats__wrapper"},Y={class:"stats__block stats__block--person"},Z={class:"stats__picture"},x=["src"],ss={class:"stats__specifications"},ts={class:"stats__buffs"},es={class:"stats__wrap"},as=["src"],is={class:"stats__desc"},os={class:"stats__duration"},ns={class:"stats__buffs"},rs={class:"stats__wrap"},cs=["src"],us={class:"stats__desc"},ds={class:"stats__duration"},hs={class:"fight__logs logs"},ls={class:"logs__log"},ms={class:"stats__mobs"},fs={class:"stats__block stats__block--mob"},ps={class:"stats__picture"},_s=["src"],bs={class:"stats__specifications"},gs={class:"stats__buffs"},vs={class:"stats__wrap"},ys=["src"],$s={class:"stats__desc"},Ts={class:"stats__duration"},Ms={class:"stats__buffs"},ks={class:"stats__wrap"},Ps=["src"],ws={class:"stats__desc"},Ds={class:"stats__duration"},Cs={class:"fight__mobs"},Hs={class:"fight__skills skills"},Ls={class:"skills__wrap"},As=["onClick"],Es=["src","alt"],Is={class:"skills__desc"},Rs={class:"skills__cost"},Bs={class:"skills__wrap skills__wrap--potions"},Ss=["disabled","onClick"],Fs=["src","alt"],qs={class:"skills__desc skills__desc--potions"};function Ns(s,t,e,o,d,f){const u=E,k=C,P=M,w=A;return r(),c(h,null,[a("div",U,[a("div",J,[a("div",K,[a("div",W,[a("div",Y,[a("div",Z,[a("img",{class:"stats__image",alt:"Изображение персонажа",src:`/images/sprites/persons/${s.char.character.species}/icon-${s.char.character.species}.png`},null,8,x)]),a("div",ss,[m(u,{class:"stats__hp",value:s.onPercentage(s.person.stats.currentHp,s.char.character.stats.hp)},{default:p(()=>[_(n(s.person.stats.currentHp)+"/"+n(s.char.character.stats.hp),1)]),_:1},8,["value"]),m(u,{class:"stats__mp",value:s.onPercentage(s.person.stats.currentMp,s.char.character.stats.mp)},{default:p(()=>[_(n(s.person.stats.currentMp)+"/"+n(s.char.character.stats.mp),1)]),_:1},8,["value"]),a("div",ts,[t[0]||(t[0]=a("p",{class:"stats__text"},"Бафы:",-1)),(r(!0),c(h,null,l(s.person.buffs,i=>(r(),c("div",es,[a("img",{class:"stats__icon",src:i.image,alt:"Изображение бафа"},null,8,as),a("div",is,n(i.desc),1),a("div",os,n(i.duration),1)]))),256))]),a("div",ns,[t[1]||(t[1]=a("p",{class:"stats__text"},"Дебафы:",-1)),(r(!0),c(h,null,l(s.person.debuffs,i=>(r(),c("div",rs,[a("img",{class:"stats__icon",src:i.image,alt:"Изображение бафа"},null,8,cs),a("div",us,n(i.desc),1),a("div",ds,n(i.duration),1)]))),256))])])]),a("div",hs,[(r(!0),c(h,null,l(s.log,i=>(r(),c("div",ls,n(i),1))),256))])]),a("div",ms,[a("div",fs,[a("div",ps,[a("img",{class:"stats__image",src:s.mob.image,alt:"Изображение моба"},null,8,_s)]),a("div",bs,[m(u,{class:"stats__hp",value:s.onPercentage(s.mob.stats.currentHp,s.mob.stats.hp)},{default:p(()=>[_(n(s.mob.stats.currentHp)+"/"+n(s.mob.stats.hp),1)]),_:1},8,["value"]),m(u,{class:"stats__mp",value:s.onPercentage(s.mob.stats.currentMp,s.mob.stats.mp)},{default:p(()=>[_(n(s.mob.stats.currentMp)+"/"+n(s.mob.stats.mp),1)]),_:1},8,["value"]),a("div",gs,[t[2]||(t[2]=a("p",{class:"stats__text"},"Бафы:",-1)),(r(!0),c(h,null,l(s.mob.buffs,i=>(r(),c("div",vs,[a("img",{class:"stats__icon",src:i.image,alt:"Изображение бафа"},null,8,ys),a("div",$s,n(i.desc),1),a("div",Ts,n(i.duration),1)]))),256))]),a("div",Ms,[t[3]||(t[3]=a("p",{class:"stats__text"},"Дебафы:",-1)),(r(!0),c(h,null,l(s.mob.debuffs,i=>(r(),c("div",ks,[a("img",{class:"stats__icon",src:i.image,alt:"Изображение бафа"},null,8,Ps),a("div",ws,n(i.desc)+" "+n(i.damagePerTurn)+" ед. ",1),a("div",Ds,n(i.duration),1)]))),256))])])])])]),s.isPlayerHidden?b("",!0):(r(),c("div",{key:0,class:g([s.person.actions.state==="run"?`${s.char.character.species}--run`:"",s.person.actions.state==="idle"?`${s.char.character.species}--idle`:"",s.person.actions.facingLeft?`${s.char.character.species}--left`:"",`${s.char.character.species?s.char.character.species:"arcanist"}`,"fight__person"]),ref:"character",style:v({left:s.person.actions.x+"px",top:s.person.actions.y+"px"})},null,6)),a("div",Cs,[s.isMobHidden?b("",!0):(r(),c("div",{key:0,class:g([s.mob.actions.state==="hit"?"fight__mob--hit":s.mob.actions.state==="attack"?"fight__mob--attack":s.mob.actions.state==="death"?"fight__mob--death":"fight__mob--idle",s.mob.actions.facingLeft?"fight__mob--left":"","fight__mob"]),ref:"mob",style:v({left:s.mob.actions.x+"px",top:s.mob.actions.y+"px"})},null,6))]),a("div",Hs,[a("div",Ls,[(r(!0),c(h,null,l(s.person.skills,i=>(r(),c("div",{class:"skills__skill",onClick:D=>s.useSkill(i)},[a("img",{class:"skills__image",src:`/images/skills/${s.char.character.species}/${i.id}.png`,alt:i.name},null,8,Es),a("div",Is,n(i.description),1),a("div",Rs,[_(n(i.manaCost)+" ",1),m(k,{class:"skills__icon-mana",name:"stats/mana"})])],8,As))),256))]),a("div",Bs,[(r(!0),c(h,null,l(s.person.potions,i=>(r(),c("button",{class:g([i.used?"skills__skill--used":"","skills__skill button"]),disabled:i.used,onClick:D=>s.drinkPotion(i)},[a("img",{class:"skills__image",src:`/images/potions/${i.id}.png`,alt:i.name},null,8,Fs),a("div",qs,n(i.description),1)],10,Ss))),256))])])])]),m(w,{id:"reward",size:"lg"},{default:p(()=>[m(P,{gold:s.rewardGold,rewards:s.rewards,onClose:s.onRewardClose},null,8,["gold","rewards","onClose"])]),_:1})],64)}const Js=T(O,[["render",Ns],["__scopeId","data-v-e6aecdf2"]]);export{Js as default};
